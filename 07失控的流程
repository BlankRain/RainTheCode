传说有三种控制结构,顺序结构,选择结构,循环结构.其他任何结构都可以由这三种组合表达.
这三剑客未必是最好的,但是真的管用哦.Java可以作证.哈哈哈~
下面说说这三种控制结构在Julia里是怎么表达的.
1 顺序结构之复合表达式(Compound Expressions)
一般代码结构默认就是顺序结构. 从上到下依次执行.这个很正常,排队嘛,要不然乱了套了.
举个例子
x=1
y=2
z=x+y
第一步先执行x=1,然后再执行y=2,最后执行z=x+y
Julia里面是这么表达的
z = begin
         x = 1
         y = 2
         x + y
    end
用begin end包起来,最后一个表达式的值作为返回值
也可以用括号及分号来写.
比如这样z = (x = 1; y = 2; x + y)

2 有碗鸡汤是这么说的,人生是一个又一个的选择,没有对错,只有合适不合适.
合适不合适这个先不说,选择其实是个大问题.比如经济学,就是一个关于理性人选择的学科.很多高大上的学科及应用,也是关于选择的.
局限条件下,基于某种假设,人或者事物会有怎样的选择?怎么理解看待这些选择.这些选择背后有怎样的思想.反正还是蛮有趣的.
当然,程序世界没这么多乱七八糟.
在Julia里关于选择,比较简单,种类也比较多.先说最基本的吧.
来看这个.
if x < y
  println("x is less than y")
elseif x > y
  println("x is greater than y")
else
  println("x is equal to y")
end

if表达式是有返回值的. 比如
x=666
y=233
me="来自宇宙最深处十九岁的点赞狂魔"
he="来自猩猩的你"
handsomeBoy=if x>y me else he end

if else end 有个三目表达式 这么写的 test?truevalue:flasevalue;
比如 handsomeBoy=x>y? me:he
可能会感觉清爽哦~

3 人是人他妈生的,妖是妖他妈生的.人妖是你他妈生的.Sorry,动粗了..原画是这样的.
唐僧： 你有多少兄弟姐妹？你父母尚在吗？你说句话啊，我只是想在临死之前多交一个朋友而已。
唐僧： 所以说做妖就象做人一样，要有仁慈的心，有了仁慈的心，就不再是妖，是人妖。（小妖甲开始呕吐。）
唐僧： 哎，他明白了，你明白了没有？
唐僧： 人和妖精都是妈生的，不同的人是人他妈生的，妖是妖他妈生的，人和妖是没有本质的区别的，一个妖一旦有了人的感情，那他就不是要了，是人妖
……
小妖甲：我受不了啦－－！（拔刀自尽）
唐僧： 你妈贵姓啊？
小妖乙：啊－－！（精神崩溃）
唐僧： 看，现在是妹妹要救姐姐，等一会那个姐姐一定会救妹妹的。
唐僧： 看，我说对了吧？（这时小妖乙在唐僧身旁上吊自尽了。）
唐僧： 居然比我还快，你真行！
唐僧： 小心啊！打雷喽！下雨收衣服啊！（众小妖晕倒一片。）

哈哈..碎碎念,折磨死人.会碎碎念的人,是可以毁灭地球的. 当然,拯救地球的也得会碎碎念.
在Julia里面,想要会碎碎念.得用到第三种控制结构,循环语句.
先说最常用也最易理解的.for循环
来,看个示例,先念一万遍 虚空藏箴言 "南牟阿迦舍揭婆耶俺阿利迦摩利莎哇可" 做一个有智慧的人.
一万=10_000  # julia里面数字 可以用下划线分一下,这样好数
念=println
虚空藏箴言="南牟阿迦舍揭婆耶俺阿利迦摩利莎哇可"
for 次数= 1:一万
  念(虚空藏箴言)
end
来解释一下这是啥,
1:一万  这个不是比例尺,这个在Julia里面叫range,就是区间,数学上是这样的[1,10000]表示从1到10000.
for 次数= 1:1万 , 想象一下击鼓传花,"次数"是那朵小红花,看见这朵小红花没?到谁手上就代表着谁.
那再看一眼这个例子
for 次数= 1:一万
  念("第 $次数 次念 $虚空藏箴言")
end
这个就很明白了吧~
什么?不明白? $次数是个啥? 哦~ 是这样的,在Julia里面,字符串是可以插入变量的. "$次数"就是去取"次数"这个变量的值来放到这里.完形填个空嘛~

for 循环来处理range是一件新潮简单好玩的事情.但是,传统一点的for循环是这个套路的.
比如js里面 for(var i=0;i<10000;i++){console.log("南牟阿迦舍揭婆耶俺阿利迦摩利莎哇可")}
Sorry,Julia 里面不按这种套路玩.为啥?因为传统套路不好玩.
来看看Julia里for循环另外两个分身.

for i in [1,4,0]
         println(i)
end

for s ∈ ["foo","bar","baz"]
         println(s)
end

in 和 ∈ 来遍历集合.是不是更容易理解.

for循环就这么多吧,再说就反胃了.
来说说while循环.
while循环比for循环复杂一点,一般是这种套路.
while 测试条件
  做坏事情
  if 跳出条件  break end
end
while循环关键点是跳出循环.跳出循环有两种,一个是主动跳,一个是被动跳.主动跳就是break语句. 被动跳就是 while 测试条件 条件不满足的时候会跳出来.
举个例子:
当山峰没有棱角的时候
当河水不再流
当时间停住日夜不分
当天地万物化为虚有
我还是不能和你分手
不能和你分手
你的温柔是我今生最大的守候
,
代码写就是
while 山峰没有棱角() && 河水不再流() && 时间停住() && 日夜不分() && 天地万物化为虚有() # 说明一下啊,&& 是 and 符号,念and就行,逻辑和且并的意思
    不能和你分手()
    守候(你的温柔)(with(allMylife))   #哈哈,此处当有死循环~
end

嗯,控制结构基本就说完了.很简单很强大的东西.
下面换个角度来说说控制结构.
这个得说LISP. 南慕容北乔峰.程序江湖里另一路高手.我只说LISP里面的L.
L是List,列表的意思.啥是列表?Julia 里面大概可以对应Iteration.
比如  b = ["e","d","b","c","a"],说白了就是个糖葫芦串~
这里面得提两个函数,map  filter
map(f, c...) → collection
啥意思?
假如b = ["e","d","b","c","a"],map(f,b) 就等于 [f("e"),f("d")....f("a")] 就是里面的每个元素都调用一下f函数.
再来看看filter
filter(function, collection)
Return a copy of collection, removing elements for which function is false. For associative collections, the function is passed two arguments (key and value).
啥意思?说白了就是过滤. 举个例子
b=1:20
filter((x)->x<15,b)
(x)->x<15 是个匿名函数. (x) 是参数 -> 是个箭头 x<15 是函数体. 这个函数返回 x 是否比15小
filter((x)->x<15,b) 就是从b里面找出小于15的数.

map(somefunction,filter((x)->x<15,b))  这个等价于
for(i <-1:20){
  if(i<15){
    somefunction(i)
  }
}
不过 个人感觉上面的可能更好一些. 数据流+声明式,也是蛮好玩的.
各有千秋,看个人口味吧..我不挑食,两者都是我的菜.

好啦,流程控制就这么多了.
