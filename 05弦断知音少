string 字符串,弦,线等~
总之,把单个的符，连接起来. 符呢，字符，音符都是可以的.这一串某符,有如糖葫芦,
它就是string. 它是居士的念珠，它是孩子的糖葫芦,它是雅士的魂牵梦绕..
在编程世界里,可以说整部linux,就是个string处理. 事实上,它是非常复杂的.
它的复杂在它的内涵.它是整个人类文明中,文字的代言人.它的复杂来自于文化的复杂.
但,它的形式是简单的.它就是个串. 撸串的串.~ 在捋起袖子撸串之前,先说说容器.

容,存在.器,所凭. 容器,就是支撑你存在的东西.
比如,一杯水. 杯子是支撑水存在的东西.
容器有有名和无名的两种. 有名的容器,在编程世界里叫map(字典,映射).
无名的容器在编程世界里叫列表. LISP就是无名容器集大成者.Java是有名容器集大成者.(其以类为容)
两者其实都是简单粗暴型的.

那string呢就是一个列表里装着一堆字符.字符是啥玩意? 程序里面一般叫Char. 它是穿上马甲的数.
比如 'a' 就是数字 97 ,字符也是个容器,它是一个有名的容器,它把'a'<--> 97 联系起来. a是它的名,97是它的值.
'a'是它的表达.

关于String,在Julia里面也很简单.
串="abcdefg"
再来一串= """ abcd
              efgh
              hdaga
          """
上面是单行和多行字符串
两串="$串 $再来一串"
这个是变量注入的字符串~ 是不是很方便?

还有很多函数,比如 reverse .操作列表的感觉都可以操作它. 它本来就是个串嘛.
比如这样 串[2:], length(串)等等.

关于string引申的文本解析,这个我就不多说了.有些复杂,我不会.喜欢的可以自己了解哦.
传送门在这里: https://github.com/mit-nlp/Text.jl
