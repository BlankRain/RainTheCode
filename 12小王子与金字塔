小王子与金字塔
小王子的星球很小,只有一个房子那么大.那里只住着他一个人.大人们喜欢数字,小王子的星球就有了一个编号:B162号.
每天早晨洗漱后,小王子需要仔细的清理和打扮他的星球,他必须强迫自己去拔掉猴面包树,它小时候跟玫瑰的幼苗很像,你要是能认出它,必须马上拔掉它,
这是非常乏味的劳动,但是也很简单.

其实我原本想说鲁滨逊,因为经济学里有个概念"鲁滨逊经济",啥意思?就是单身狗的日常. 自给自足,自娱自乐,自哀自伤.没有交易,没有竞争.不会有失业,也不会有市场.
后来,我选了小王子.无他,她喜欢小王子,她送了我一本小王子.里面夹了个福袋,写着"见字如面,哈哈^_^~". 我很多时候的快乐与悲伤都来自这里.
这是一个常见的为情所困的故事.我之所以好好写着代码教程,却温柔哀伤起来,只是因为我想她了.

想念你,萌甜君~!

言归正传,小王子只有一个人,所有的事情自己干,拔猴香蕉树,守护他的花儿,照顾他的绵羊.
这是典型的传统的单线程编程模型.啥意思?就是只有一个运行环境.从头到尾按逻辑去执行.一个和尚挑水喝.这想必也是很多独身主义独身的理由.

那金字塔呢?金字塔不是一个人建成的,里面涉及大量的组织协作.最后,一项伟大的工程完成.这不是单身狗可以搞定的.涉及协作的时候,我们通常也叫混社会.

在Julia里面,我们默认单身.哦不~默认单人世界.其实大多数编程语言也都是这样的,默认单人世界.人的本质是孤独哈~

这个里面其实是有些哲学思辨的,照例先抄一大段：

每一个个体,必须是某一种的个体,它必定有些某些性质.不可能有一个没有任何性质的个体.个体是一个殊相;它的性质就是寓于其中的共相。所以,在每一个
个体中都有殊相与共相的矛盾,这是一种矛盾.

每一个个体既然是一个个体,必定认为它自己是主体,别的东西都是客体.这是又一种矛盾,主观与客观的矛盾.

上面内容抄自冯友兰的中国哲学史新编通论道学那一篇.

为什么说这里有哲学思辨? 因为它体现了第二种矛盾,主观与客观的矛盾.
程序一运行,先开一个主线程,也就是有一单人世界生.如果是单人世界程序,那主程跑完就可以休息了.
如果是多人世界程序,主程会引入新的个体. 这些个体,就有主观与客观的矛盾了. 这个矛盾,多人世界中我们要经常处理.
需要代入并且换位思考. 很多孩子,在代入与换位思考中,迷失了自我,分不清主客.这个我也无能为力.毕竟社会不好混啊.

不过,不要着急,不用恐慌,简单场景我们还是可以处理的.
先说第一种情况,百米赛跑.
8跑道,一人一跑道,每人一百米,跑完就行.
这是个多人世界问题,这个问题的特点是,没有资源冲突,每人一条跑道,各干各的就好，只有一种逻辑,运动员跑步.
这就非常尴尬了~Julia并行计算里对多核并行支持比较多,对多线程的支持还比较简单. 它的异步任务用的是协程.
那就用协程来说明吧.
Julia里面叫Task.它和Node一个套路,并不是多线程环境,而是异步事件模型.底层貌似用的libuv,一个著名的linux库.
来看这个怎么玩~
 players=map(function (i) @task ()-> "I'm in the $(i)th way." end ,1:8)
 
 map(schedule,players)
 
 julia> foreach((x)->println(x.result()),players)
I'm in the 1th way.
I'm in the 2th way.
I'm in the 3th way.
I'm in the 4th way.
I'm in the 5th way.
I'm in the 6th way.
I'm in the 7th way.
I'm in the 8th way.
结果就出来啦~
什么?没有分数.嗯，来给他们打个分吧.
function randScore() reduce((x,y)->Int(Char(x))+Int(Char(y)),randstring(3)) end
players=map(function (i) @task ()-> "I'm No.$(i) player with score $(randScore())." end ,1:8)
#开跑~
map(schedule,players)
julia> foreach((x)->println(x.result()),players)
I'm No.1 player with score 264.
I'm No.2 player with score 232.
I'm No.3 player with score 179.
I'm No.4 player with score 166.
I'm No.5 player with score 294.
I'm No.6 player with score 291.
I'm No.7 player with score 221.
I'm No.8 player with score 266.
这不就有啦.

再来玩个游戏,呦呦切克闹,煎饼果子来一套.
你说yes,我说药~
function laiyitao(x)
	for i=1:10
		print("--我我正正在在生生产产--")
		produce(x)
	end
end
whatYouSay=Task(()->laiyitao("yes"))
for word in whatYouSay
	print("--我我正正在在消消费费--")
	print("$word  药~!\n")
end
结果是这样的.
julia> for word in whatYouSay
           print("--我我正正在在消消费费--")
           print("$word  药药~!\n")
       end
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
--我我正正在在生生产产----我我正正在在消消费费--yes  药药~!
哈哈,是不是药不能停的感觉? 看见没两个代码块交替执行的.交替执行,就有协作的意思了.
关于协作,我是要献身说法的.给你献身不是重点,说法才是主题哦.这个得说说社会契约以及社会分工.这个关系到人与人的协作.
关于社会分工,先说个定论.社会分工是有好处的,斯密老爷子无形的手,通过社会分工,调配资源,使其最优.
社会分工涉及一个概念,相对成本.这个又涉及到个体的主观客观矛盾了.
来来来,来段相声,老张比老王能干,老张吃西瓜嗑瓜子都比老王厉害,但是,要问老张,你这两项,你自我感觉哪个最厉害. 老张说,吃西瓜. 
要问老王,你这两项,你自我感觉哪个最厉害.老王说,嗑瓜子.有了这个基础,于是乎,江湖上出现了一对张王嗑瓜组合,老张吃瓜,老王嗑瓜子,
两人联手,吃倒一家自助餐. 
当然段子是现编的,我要说的是,相对成本不同,你就有相对优势,不是绝对优势,有相对优势,积极参与社会分工,就可以收益.这是协作带来的好处.

那是什么原因导致相对成本差异呢? 生产的人文及自然环境.人文环境包括科技啦,文化啦,这些影响生产的因素.自然环境呢,很容易理解了.有高山有平原,
平原运输成本就比高山低.湖里产鱼,山上有肉.这就是自然导致的相对成本差异.
社会分工说完了.说说社会契约.

卢梭有本书,社会契约论.里面有句名句:人人生而自由，却无处不在枷锁中。自以为是他人的主人，却比他人更像是奴隶。
这是一部思想巨著,谈论的是些政治.而我又不懂政治.所以,书里的内容我就不抄了.
我说说编程里面的约定. 玩了几年代码的肯定听过一句话,约定优于配置.啥意思? 一言以蔽之,入乡随俗.
这个代码都是人写的.人与人之间如果有一些共同的习惯,那就形成了风俗.这玩意是隐含的信息,不言而喻.但很多时候,比较尴尬,不言真不喻.
我的意见是,约定未必优于配置.你约定的东西,不公开,信息就会有不对称.有不对称的情况下,就有学习成本.
当然，配置太多的话会又臭又长.也不好.那该怎么办呢? 时间会给你答案.摩擦摩擦,在光滑的地板上.因为这个是沟通成本.代码写作者之间的沟通成本.

这个沟通的问题,上帝也没办法.我又能怎么着.

最后以金字塔结束吧.
金字塔是一个具体实物,但它有抽象含义.比如食物链金字塔,销售漏斗等.里面两个特点,一个是层级,另一个是转化率.
层级很容易理解，巍巍宝塔十八层,程序里面也有层级概念.没办法,这是人类思维的产物.他们把这些层级的设计叫架构.满满的工人阶级气息，荣耀又自豪.
吐槽两句,我应该是懂设计的.设计是人的本能,我是个人.所以我懂设计,逻辑上没问题.我很多时候,不懂的是对方脑海里的设计.这是我不足的地方.
转化率也很容易理解,有耗散嘛,物理中叫熵.层层耗散,所以,一将功成万骨枯.金字塔顶端的,是消耗巨大社会资源的.也是珍贵的.

小王子有一天看了四十三次日落,我今天看着他看了四十三次日落.
